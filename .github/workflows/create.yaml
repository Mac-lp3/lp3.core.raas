name: Create branch tf workspace
run-name: ${{ github.actor }} workspace creation for ${{ github.ref_name }}

on: create

env:
  SESSION_NAME: gh-action-${{github.job}}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  create-workspace:
    name: Create workspace for ${{ github.ref_name }}
    if: ${{ !contains(github.ref, '/main') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Assume role
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          token=$(aws sts assume-role --role-arn ${{ secrets.RAAS_ROLE_ARN }} --role-session-name $SESSION_NAME --duration-seconds 900 --output json --no-cli-pager | jq)
          tmp_key_id=$(echo $token | jq -r '.Credentials.AccessKeyId')
          tmp_secret_key=$(echo $token | jq -r '.Credentials.SecretAccessKey')
          tmp_token=$(echo $token | jq -r '.Credentials.SessionToken')
          echo "AWS_ACCESS_KEY_ID=$tmp_key_id" >> "$GITHUB_ENV"
          echo "AWS_SECRET_ACCESS_KEY=$tmp_secret_key" >> "$GITHUB_ENV"
          echo "AWS_SESSION_TOKEN=$tmp_token" >> "$GITHUB_ENV"

      - name: Create workspace from main
        id: init
        env:
          workspace: ${{ github.ref_name }}
        run: |
          terraform -chdir=prod init
          terraform -chdir=prod workspace select main
          terraform -chdir=prod state pull > prod/main.tfstate
          cat prod/main.tfstate
          tmp=$(echo $workspace | tr / -)
          terraform -chdir=prod workspace new $tmp
          terraform -chdir=prod state push main.tfstate
          rm prod/main.tfstate
